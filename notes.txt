TODO: 

 - there is no dynamic reconfigure in ros2. The parameters can be set dynamically (through command line, etc). Use backend robotics to see how you can pass parameters to nodes. See how you can do that through GUI (same as adas-ros1). Write 'node/code' to do that
{cfg files are python executables using dynamic_reconfigure package}

TOMORROW: migrate 'car_*' packages with the cmake+package.xml changes

UPDATE: need to import adas_common first

Separate message paackage (write interface)
Seperate launch package (write seperate launch file)


------------------------------------------------------------------------------

EASY PORTS:
 - car_*
 - treadmill_*

------------------------------------------------------------------------------

You do not have to make a class, namespace every time you make a file. It can just be structs, functions, etc. 
Consider header only libraries (think about how you would link them using cmake/ament --> look at RpiCAN repo and Martin Endler's push)
write functions with more complex return types

TODO: finish reading and annotating checksum
        finish all of adas_common C++

